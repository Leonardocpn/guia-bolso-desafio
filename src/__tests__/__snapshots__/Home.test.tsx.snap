// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render Home 1`] = `
<Component>
  <Home>
    <styled.div>
      <div
        className="sc-AxjAm gLgbMa"
      >
        <styled.header>
          <header
            className="sc-AxirZ jEpVqe"
          >
            <styled.img
              alt="Chuck Norris Image"
              src="chuck-norris.jpg"
            >
              <img
                alt="Chuck Norris Image"
                className="sc-AxiKw jkpSUw"
                src="chuck-norris.jpg"
              />
            </styled.img>
            <styled.div>
              <div
                className="sc-AxgMl frflFQ"
              >
                Wanna hear some Chuck Noris fatcs?
              </div>
            </styled.div>
            <styled.div>
              <div
                className="sc-AxheI clJDsf"
              >
                Select a category from bellow
              </div>
            </styled.div>
            <styled.div>
              <div
                className="sc-Axmtr IALjX"
              >
                <WithStyles(ForwardRef(FormControl))
                  fullWidth={true}
                  variant="outlined"
                >
                  <ForwardRef(FormControl)
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    fullWidth={true}
                    variant="outlined"
                  >
                    <div
                      className="MuiFormControl-root MuiFormControl-fullWidth"
                    >
                      <WithStyles(ForwardRef(InputLabel))>
                        <ForwardRef(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                        >
                          <WithStyles(ForwardRef(FormLabel))
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                            classes={
                              Object {
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                              }
                            }
                            data-shrink={false}
                          >
                            <ForwardRef(FormLabel)
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "filled": "MuiFormLabel-filled",
                                  "focused": "Mui-focused Mui-focused",
                                  "required": "Mui-required Mui-required",
                                  "root": "MuiFormLabel-root",
                                }
                              }
                              data-shrink={false}
                            >
                              <label
                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                data-shrink={false}
                              >
                                Category
                              </label>
                            </ForwardRef(FormLabel)>
                          </WithStyles(ForwardRef(FormLabel))>
                        </ForwardRef(InputLabel)>
                      </WithStyles(ForwardRef(InputLabel))>
                      <WithStyles(ForwardRef(Select))
                        aria-label="categories"
                        label="category"
                        labelId="categories"
                        onChange={[Function]}
                        style={
                          Object {
                            "backgroundColor": "white",
                          }
                        }
                        value=""
                        variant="outlined"
                      >
                        <ForwardRef(Select)
                          aria-label="categories"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon",
                              "iconFilled": "MuiSelect-iconFilled",
                              "iconOpen": "MuiSelect-iconOpen",
                              "iconOutlined": "MuiSelect-iconOutlined",
                              "nativeInput": "MuiSelect-nativeInput",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select",
                              "selectMenu": "MuiSelect-selectMenu",
                            }
                          }
                          label="category"
                          labelId="categories"
                          onChange={[Function]}
                          style={
                            Object {
                              "backgroundColor": "white",
                            }
                          }
                          value=""
                          variant="outlined"
                        >
                          <WithStyles(ForwardRef(OutlinedInput))
                            aria-label="categories"
                            inputComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "aria-label": [Function],
                                  "autoFocus": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "disabled": [Function],
                                  "displayEmpty": [Function],
                                  "inputRef": [Function],
                                  "labelId": [Function],
                                  "multiple": [Function],
                                  "name": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onFocus": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "readOnly": [Function],
                                  "renderValue": [Function],
                                  "tabIndex": [Function],
                                  "type": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            inputProps={
                              Object {
                                "IconComponent": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "MenuProps": undefined,
                                "SelectDisplayProps": Object {
                                  "id": undefined,
                                },
                                "autoWidth": false,
                                "children": Array [],
                                "classes": Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined",
                                  "nativeInput": "MuiSelect-nativeInput",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select",
                                  "selectMenu": "MuiSelect-selectMenu",
                                },
                                "displayEmpty": false,
                                "labelId": "categories",
                                "multiple": false,
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": "outlined",
                              }
                            }
                            label="category"
                            labelWidth={0}
                            onChange={[Function]}
                            style={
                              Object {
                                "backgroundColor": "white",
                              }
                            }
                            value=""
                          >
                            <ForwardRef(OutlinedInput)
                              aria-label="categories"
                              classes={
                                Object {
                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "input": "MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                  "marginDense": "MuiOutlinedInput-marginDense",
                                  "multiline": "MuiOutlinedInput-multiline",
                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                  "root": "MuiOutlinedInput-root",
                                }
                              }
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "aria-label": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": undefined,
                                  "SelectDisplayProps": Object {
                                    "id": undefined,
                                  },
                                  "autoWidth": false,
                                  "children": Array [],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": false,
                                  "labelId": "categories",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "outlined",
                                }
                              }
                              label="category"
                              labelWidth={0}
                              onChange={[Function]}
                              style={
                                Object {
                                  "backgroundColor": "white",
                                }
                              }
                              value=""
                            >
                              <WithStyles(ForwardRef(InputBase))
                                aria-label="categories"
                                classes={
                                  Object {
                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "input": "MuiOutlinedInput-input",
                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                    "marginDense": "MuiOutlinedInput-marginDense",
                                    "multiline": "MuiOutlinedInput-multiline",
                                    "notchedOutline": null,
                                    "root": "MuiOutlinedInput-root",
                                  }
                                }
                                fullWidth={false}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "MenuProps": [Function],
                                      "SelectDisplayProps": [Function],
                                      "aria-label": [Function],
                                      "autoFocus": [Function],
                                      "autoWidth": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "defaultValue": [Function],
                                      "disabled": [Function],
                                      "displayEmpty": [Function],
                                      "inputRef": [Function],
                                      "labelId": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onClose": [Function],
                                      "onFocus": [Function],
                                      "onOpen": [Function],
                                      "open": [Function],
                                      "readOnly": [Function],
                                      "renderValue": [Function],
                                      "tabIndex": [Function],
                                      "type": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "MenuProps": undefined,
                                    "SelectDisplayProps": Object {
                                      "id": undefined,
                                    },
                                    "autoWidth": false,
                                    "children": Array [],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "displayEmpty": false,
                                    "labelId": "categories",
                                    "multiple": false,
                                    "onClose": undefined,
                                    "onOpen": undefined,
                                    "open": undefined,
                                    "renderValue": undefined,
                                    "type": undefined,
                                    "variant": "outlined",
                                  }
                                }
                                multiline={false}
                                onChange={[Function]}
                                renderSuffix={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                type="text"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  aria-label="categories"
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                      "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                      "disabled": "Mui-disabled Mui-disabled",
                                      "error": "Mui-error Mui-error",
                                      "focused": "Mui-focused Mui-focused",
                                      "formControl": "MuiInputBase-formControl",
                                      "fullWidth": "MuiInputBase-fullWidth",
                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                    }
                                  }
                                  fullWidth={false}
                                  inputComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "IconComponent": [Function],
                                        "MenuProps": [Function],
                                        "SelectDisplayProps": [Function],
                                        "aria-label": [Function],
                                        "autoFocus": [Function],
                                        "autoWidth": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "defaultValue": [Function],
                                        "disabled": [Function],
                                        "displayEmpty": [Function],
                                        "inputRef": [Function],
                                        "labelId": [Function],
                                        "multiple": [Function],
                                        "name": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onClose": [Function],
                                        "onFocus": [Function],
                                        "onOpen": [Function],
                                        "open": [Function],
                                        "readOnly": [Function],
                                        "renderValue": [Function],
                                        "tabIndex": [Function],
                                        "type": [Function],
                                        "value": [Function],
                                        "variant": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "IconComponent": Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      },
                                      "MenuProps": undefined,
                                      "SelectDisplayProps": Object {
                                        "id": undefined,
                                      },
                                      "autoWidth": false,
                                      "children": Array [],
                                      "classes": Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "nativeInput": "MuiSelect-nativeInput",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      },
                                      "displayEmpty": false,
                                      "labelId": "categories",
                                      "multiple": false,
                                      "onClose": undefined,
                                      "onOpen": undefined,
                                      "open": undefined,
                                      "renderValue": undefined,
                                      "type": undefined,
                                      "variant": "outlined",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  renderSuffix={[Function]}
                                  style={
                                    Object {
                                      "backgroundColor": "white",
                                    }
                                  }
                                  type="text"
                                  value=""
                                >
                                  <div
                                    aria-label="categories"
                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                      }
                                    }
                                  >
                                    <ForwardRef(SelectInput)
                                      IconComponent={
                                        Object {
                                          "$$typeof": Symbol(react.memo),
                                          "compare": null,
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        }
                                      }
                                      SelectDisplayProps={
                                        Object {
                                          "id": undefined,
                                        }
                                      }
                                      aria-invalid={false}
                                      autoWidth={false}
                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled",
                                          "icon": "MuiSelect-icon",
                                          "iconFilled": "MuiSelect-iconFilled",
                                          "iconOpen": "MuiSelect-iconOpen",
                                          "iconOutlined": "MuiSelect-iconOutlined",
                                          "nativeInput": "MuiSelect-nativeInput",
                                          "outlined": "MuiSelect-outlined",
                                          "root": "MuiSelect-root",
                                          "select": "MuiSelect-select",
                                          "selectMenu": "MuiSelect-selectMenu",
                                        }
                                      }
                                      disabled={false}
                                      displayEmpty={false}
                                      inputRef={[Function]}
                                      labelId="categories"
                                      multiple={false}
                                      onAnimationStart={[Function]}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      value=""
                                      variant="outlined"
                                    >
                                      <div
                                        aria-haspopup="listbox"
                                        aria-labelledby="categories"
                                        className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <span
                                          dangerouslySetInnerHTML={
                                            Object {
                                              "__html": "&#8203;",
                                            }
                                          }
                                        />
                                      </div>
                                      <input
                                        aria-hidden={true}
                                        className="MuiSelect-nativeInput"
                                        onAnimationStart={[Function]}
                                        onChange={[Function]}
                                        required={false}
                                        tabIndex={-1}
                                        value=""
                                      />
                                      <ForwardRef(ArrowDropDownIcon)
                                        className="MuiSelect-icon MuiSelect-iconOutlined"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiSelect-icon MuiSelect-iconOutlined"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiSelect-icon MuiSelect-iconOutlined"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(ArrowDropDownIcon)>
                                      <WithStyles(ForwardRef(Menu))
                                        MenuListProps={
                                          Object {
                                            "aria-labelledby": "categories",
                                            "disableListWrap": true,
                                            "role": "listbox",
                                          }
                                        }
                                        PaperProps={
                                          Object {
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="categories"
                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                            role="button"
                                            tabindex="0"
                                          >
                                            <span>
                                              ​
                                            </span>
                                          </div>
                                        }
                                        id="menu-"
                                        onClose={[Function]}
                                        open={false}
                                      >
                                        <ForwardRef(Menu)
                                          MenuListProps={
                                            Object {
                                              "aria-labelledby": "categories",
                                              "disableListWrap": true,
                                              "role": "listbox",
                                            }
                                          }
                                          PaperProps={
                                            Object {
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="categories"
                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                              role="button"
                                              tabindex="0"
                                            >
                                              <span>
                                                ​
                                              </span>
                                            </div>
                                          }
                                          classes={
                                            Object {
                                              "list": "MuiMenu-list",
                                              "paper": "MuiMenu-paper",
                                            }
                                          }
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                        >
                                          <WithStyles(ForwardRef(Popover))
                                            PaperProps={
                                              Object {
                                                "classes": Object {
                                                  "root": "MuiMenu-paper",
                                                },
                                                "style": Object {
                                                  "minWidth": undefined,
                                                },
                                              }
                                            }
                                            anchorEl={
                                              <div
                                                aria-haspopup="listbox"
                                                aria-labelledby="categories"
                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <span>
                                                  ​
                                                </span>
                                              </div>
                                            }
                                            anchorOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            getContentAnchorEl={[Function]}
                                            id="menu-"
                                            onClose={[Function]}
                                            onEntering={[Function]}
                                            open={false}
                                            transformOrigin={
                                              Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                                            }
                                            transitionDuration="auto"
                                          >
                                            <ForwardRef(Popover)
                                              PaperProps={
                                                Object {
                                                  "classes": Object {
                                                    "root": "MuiMenu-paper",
                                                  },
                                                  "style": Object {
                                                    "minWidth": undefined,
                                                  },
                                                }
                                              }
                                              anchorEl={
                                                <div
                                                  aria-haspopup="listbox"
                                                  aria-labelledby="categories"
                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                  role="button"
                                                  tabindex="0"
                                                >
                                                  <span>
                                                    ​
                                                  </span>
                                                </div>
                                              }
                                              anchorOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              classes={
                                                Object {
                                                  "paper": "MuiPopover-paper",
                                                  "root": "MuiPopover-root",
                                                }
                                              }
                                              getContentAnchorEl={[Function]}
                                              id="menu-"
                                              onClose={[Function]}
                                              onEntering={[Function]}
                                              open={false}
                                              transformOrigin={
                                                Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                                              }
                                              transitionDuration="auto"
                                            >
                                              <ForwardRef(Modal)
                                                BackdropProps={
                                                  Object {
                                                    "invisible": true,
                                                  }
                                                }
                                                className="MuiPopover-root"
                                                container={<body />}
                                                id="menu-"
                                                onClose={[Function]}
                                                open={false}
                                              />
                                            </ForwardRef(Popover)>
                                          </WithStyles(ForwardRef(Popover))>
                                        </ForwardRef(Menu)>
                                      </WithStyles(ForwardRef(Menu))>
                                    </ForwardRef(SelectInput)>
                                    <WithStyles(ForwardRef(NotchedOutline))
                                      className="MuiOutlinedInput-notchedOutline"
                                      label="category"
                                      labelWidth={0}
                                      notched={false}
                                    >
                                      <ForwardRef(NotchedOutline)
                                        className="MuiOutlinedInput-notchedOutline"
                                        classes={
                                          Object {
                                            "legend": "PrivateNotchedOutline-legend-2",
                                            "legendLabelled": "PrivateNotchedOutline-legendLabelled-3",
                                            "legendNotched": "PrivateNotchedOutline-legendNotched-4",
                                            "root": "PrivateNotchedOutline-root-1",
                                          }
                                        }
                                        label="category"
                                        labelWidth={0}
                                        notched={false}
                                      >
                                        <fieldset
                                          aria-hidden={true}
                                          className="PrivateNotchedOutline-root-1 MuiOutlinedInput-notchedOutline"
                                        >
                                          <legend
                                            className="PrivateNotchedOutline-legendLabelled-3"
                                          >
                                            <span>
                                              category
                                            </span>
                                          </legend>
                                        </fieldset>
                                      </ForwardRef(NotchedOutline)>
                                    </WithStyles(ForwardRef(NotchedOutline))>
                                  </div>
                                </ForwardRef(InputBase)>
                              </WithStyles(ForwardRef(InputBase))>
                            </ForwardRef(OutlinedInput)>
                          </WithStyles(ForwardRef(OutlinedInput))>
                        </ForwardRef(Select)>
                      </WithStyles(ForwardRef(Select))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </div>
            </styled.div>
          </header>
        </styled.header>
        <styled.main>
          <main
            className="sc-AxmLO btxfLJ"
          />
        </styled.main>
      </div>
    </styled.div>
  </Home>
</Component>
`;
