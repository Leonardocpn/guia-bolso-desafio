{"version":3,"sources":["assets/chuck-norris.jpg","service/api.tsx","pages/home/styles.tsx","pages/home/components/facts/styles.tsx","pages/home/components/facts/index.tsx","pages/home/index.tsx"],"names":["module","exports","api","axios","create","baseURL","Wrapper","styled","div","Header","header","StyledImage","img","Title","Subtitle","StyleSelect","Main","main","Container","FactContainer","StyledCard","Card","FactCard","category","useCategory","useState","joke","setJoke","a","get","then","response","newJoke","data","value","useEffect","jokeFromApi","Button","variant","color","onClick","Home","categories","setCategories","selectedCategory","setSelectedCategory","setCategory","src","image","alt","FormControl","fullWidth","InputLabel","Select","aria-label","labelId","onChange","event","child","target","label","style","backgroundColor","map","MenuItem","key","Typography"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,0C,6ECM5BC,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,sC,oqDCDJ,IAAMC,EAAUC,IAAOC,IAAV,KAMPC,EAASF,IAAOG,OAAV,KAWNC,EAAcJ,IAAOK,IAAV,KAwBXC,GAXgBN,IAAOC,IAAV,KAKGD,IAAOC,IAAV,KAMLD,IAAOC,IAAV,MAMLM,EAAWP,IAAOC,IAAV,KAKRO,EAAcR,IAAOC,IAAV,KAQXQ,EAAOT,IAAOU,KAAV,K,oeC3DV,IAAMC,EAAYX,IAAOC,IAAV,KAUTW,EAAgBZ,IAAOC,IAAV,KAKbY,EAAab,YAAOc,IAAPd,CAAH,KCgCRe,MAlCf,WAAqB,IACXC,EAAaC,cAAbD,SADU,EAEME,qBAFN,mBAEXC,EAFW,KAELC,EAFK,iDAalB,sBAAAC,EAAA,sEACQ1B,EACH2B,IADG,2BAC0CN,IAC7CO,MAAK,SAACC,GACL,IAAMC,EAAUD,EAASE,KACzBN,EAAQK,EAAQE,UALtB,4CAbkB,sBAsBlB,OAlBAC,qBAAU,WACRjC,EACG2B,IADH,2BACgDN,IAC7CO,MAAK,SAACC,GACL,IAAMK,EAAcL,EAASE,KAC7BN,EAAQS,EAAYF,YAEvB,CAACX,IAYF,kBAACL,EAAD,KACE,kBAACE,EAAD,KACE,kBAACD,EAAD,KAAgBO,IAElB,kBAACW,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QA3B9B,4CA2Bd,oBCmCSC,UAxDf,WAAiB,IAAD,EACsBhB,mBAAmB,IADzC,mBACPiB,EADO,KACKC,EADL,OAEkClB,mBAAiB,IAFnD,mBAEPmB,EAFO,KAEWC,EAFX,KAINC,EAAgBtB,cAAhBsB,YAmBR,OAjBAX,qBAAU,WACRjC,EAAI2B,IAAc,eAAeC,MAAK,SAACC,GACrCY,EAAcZ,EAASE,WAExB,IAcD,kBAAC3B,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,CAAaoC,IAAKC,IAAOC,IAAI,uBAC7B,kBAACpC,EAAD,2CACA,kBAACC,EAAD,sCACA,kBAACC,EAAD,KACE,kBAACmC,EAAA,EAAD,CAAaZ,QAAQ,WAAWa,WAAS,GACvC,kBAACC,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACEC,aAAW,aACXC,QAAQ,aACRrB,MAAOU,EACPY,SAxBZ,SACEC,EAIAC,GAEAb,EAAoBY,EAAME,OAAOzB,OACjCY,EAAYW,EAAME,OAAOzB,QAiBf0B,MAAM,WACNC,MAAO,CAAEC,gBAAiB,SAC1BxB,QAAQ,YAEPI,GACCA,EAAWqB,KAAI,SAACxC,GAAD,OACb,kBAACyC,EAAA,EAAD,CAAUC,IAAK1C,EAAUW,MAAOX,GAC9B,kBAAC2C,EAAA,EAAD,KAAa3C,WAO3B,kBAACP,EAAD,KAAO4B,EAAmB,kBAAC,EAAD,MAAe","file":"static/js/4.6355d50b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chuck-norris.d8bf2be0.jpg\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.chucknorris.io/jokes/\",\n});\n\nexport default api;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background-color: #fcfcfc;\n  height: 100vh;\n  width: 100vw;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px;\n  @media only screen and (max-width: 600px) {\n    padding: 0;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const StyledImage = styled.img`\n  max-width: 500px;\n  border-radius: 8px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  @media only screen and (max-width: 600px) {\n    width: 100%;\n  }\n  @media only screen and (max-width: 500px) {\n    border-radius: 0;\n  }\n`;\n\nexport const ListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const Title = styled.div`\n  margin: 18px;\n  font-size: 25px;\n  font-weight: bold;\n`;\n\nexport const Subtitle = styled.div`\n  margin: 12px;\n  margin-top: 0;\n  font-size: 16px;\n`;\nexport const StyleSelect = styled.div`\n  width: 500px;\n  @media only screen and (max-width: 600px) {\n    width: 95%;\n    margin: auto;\n  }\n`;\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\nimport { Card } from \"@material-ui/core\";\n\nexport const Container = styled.div`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  @media only screen and (max-width: 600px) {\n    width: 95%;\n    margin: auto;\n  }\n`;\n\nexport const FactContainer = styled.div`\n  margin: 2%;\n  font-size: 18px;\n`;\n\nexport const StyledCard = styled(Card)`\n  margin-bottom: 6px;\n  padding: 12px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useCategory } from \"../../../../service/categoryContext\";\nimport api from \"../../../../service/api\";\nimport { Button } from \"@material-ui/core\";\nimport { Container, StyledCard, FactContainer } from \"./styles\";\n\ninterface ApiCategoryResponse {\n  categories: string[];\n  created_at: string;\n  icon_url: string;\n  id: string;\n  updated_at: string;\n  url: string;\n  value: string;\n}\n\nfunction FactCard() {\n  const { category } = useCategory()!;\n  const [joke, setJoke] = useState<string>();\n\n  useEffect(() => {\n    api\n      .get<ApiCategoryResponse>(`/random?category=${category}`)\n      .then((response) => {\n        const jokeFromApi = response.data;\n        setJoke(jokeFromApi.value);\n      });\n  }, [category]);\n\n  async function handleNewJoke() {\n    await api\n      .get<ApiCategoryResponse>(`/random?category=${category}`)\n      .then((response) => {\n        const newJoke = response.data;\n        setJoke(newJoke.value);\n      });\n  }\n\n  return (\n    <Container>\n      <StyledCard>\n        <FactContainer>{joke}</FactContainer>\n      </StyledCard>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleNewJoke}>\n        Get a new Fact\n      </Button>\n    </Container>\n  );\n}\n\nexport default FactCard;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../service/api\";\nimport { useCategory } from \"../../service/categoryContext\";\nimport {\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport image from \"../../assets/chuck-norris.jpg\";\nimport {\n  Wrapper,\n  Header,\n  StyledImage,\n  Main,\n  Title,\n  Subtitle,\n  StyleSelect,\n} from \"./styles\";\nimport FactCard from \"./components/facts\";\n\nfunction Home() {\n  const [categories, setCategories] = useState<string[]>([]);\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n\n  const { setCategory } = useCategory()!;\n\n  useEffect(() => {\n    api.get<string[]>(\"/categories\").then((response) => {\n      setCategories(response.data);\n    });\n  }, []);\n\n  function handleSelected(\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    child: React.ReactNode\n  ) {\n    setSelectedCategory(event.target.value as string);\n    setCategory(event.target.value as string);\n  }\n\n  return (\n    <Wrapper>\n      <Header>\n        <StyledImage src={image} alt=\"Chuck Norris Image\"></StyledImage>\n        <Title>Wanna hear some Chuck Noris fatcs?</Title>\n        <Subtitle>Select a category from bellow</Subtitle>\n        <StyleSelect>\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel>Category</InputLabel>\n            <Select\n              aria-label=\"categories\"\n              labelId=\"categories\"\n              value={selectedCategory}\n              onChange={handleSelected}\n              label=\"category\"\n              style={{ backgroundColor: \"white\" }}\n              variant=\"outlined\"\n            >\n              {categories &&\n                categories.map((category) => (\n                  <MenuItem key={category} value={category}>\n                    <Typography>{category}</Typography>\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </StyleSelect>\n      </Header>\n      <Main>{selectedCategory ? <FactCard /> : null}</Main>\n    </Wrapper>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}